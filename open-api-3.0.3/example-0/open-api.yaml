openapi: 3.0.3
info:
  license:
    name: Apache License Version 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.txt
  title: Swagger API Definition - backend-service - v1
  description: |
    Provides API Services for the integration of backend-service Endpoints (v1)

    <a href="../index.html"><font size=5>Home</font></a>
  version: v1.0
servers:
  - url: https://localhost/services
security:
  - bearer: []
paths:
  /v1.0/stuff:
    get:
      tags:
        - stuff
      summary: >-
        Returns a list of stuff matching the 3 or more character search on
        partial_name.
      operationId: return_stuff_ov1_0
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/partial_stuff_name'
      responses:
        '200':
          $ref: '#/components/responses/paged_stuff'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '408':
          $ref: '#/components/responses/408'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
components:
  responses:
    '400':
      description: |
        Bad Request - The 400 (Bad Request) status code.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/error_code_ov1_2'
    '401':
      description: |
        The 401 (Unauthorized) status code.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/error_code_ov1_2'
    '403':
      description: |
        Forbidden - The 403 (Forbidden) status code.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/error_code_ov1_2'
    '408':
      description: |
        The 408 (Request Timeout) status code.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/error_code_ov1_2'
    '429':
      description: |
        Too Many Requests - The 429 (Too Many Requests) status code.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/error_code_ov1_2'
    '500':
      description: |
        Internal server error - The 500 (Internal Server Error) status code.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/error_code_ov1_2'
    '501':
      description: |
        The 501 (Not Implemented) status code.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/error_code_ov1_2'
    '503':
      description: |
        The 503 (Service Unavailable) status code.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/error_code_ov1_2'
    paged_stuff:
      description: >-
        Data of multiple stuffs has been returned successfully (arranged
        alphabetically by stuff name in ascending order).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/paged_stuff_ov1_0'
  schemas:
    paged_stuff_ov1_0:
      title: paged_stuff
      description: Paginated data of multiple stuff according to stuff_name search.
      type: object
      properties:
        stuff:
          description: Data of multiple stuff matching the stuff_name search.
          type: array
          items:
            $ref: '#/components/schemas/stuff_ov1_0'
        offset:
          description: >-
            The index of the page that is to be retrieved (as set in the query
            or by default).
          type: integer
          format: int32
          example: 0
        limit:
          description: >-
            The number of elements per page that are to be retrieved (as set in
            the query or by default).
          type: integer
          format: int32
          example: 100
        total:
          description: The total number of items available to be returned.
          type: integer
          format: int32
          example: 1564
    stuff_ov1_0:
      title: stuff
      description: Several information about the stuff according to stuff_id
      type: object
      properties:
        supplier:
          type: object
          properties:
            id:
              description: This attribute determines the ID
              type: string
              minLength: 9
              maxLength: 9
              example: '331184457'
            stuff_name:
              description: stuff name of the supplier
              type: string
              maxLength: 255
              example: stuff AG
        address:
          type: object
          properties:
            city:
              title: city
              description: Name of the city
              type: string
              maxLength: 255
              example: Halle
            zip:
              description: Zip code of the city
              type: string
              example: '38440'
            street:
              description: Street of the address
              type: string
              example: main road
            street2:
              description: Street number of the address
              type: string
              example: '20'
            po_box:
              description: Number of post office box
              type: string
              example: Postfach 12 54 65
            po_box_zip:
              description: Zip code of the post office box
              type: string
              example: '38440'
            state:
              description: Name of the state (readable text)
              type: string
              example: Bayern
            country_code:
              description: Country code according to ISO 3166-1 alpha-3
              type: string
              example: DEU
    error_code_ov1_2:
      title: error_code
      description: Definition of the response error
      type: object
      properties:
        type:
          description: >-
            Identifies the problem type (e.g. URI) - additional information of
            the http error
          type: string
          example: https://localhost/statuscodes/index.html
        title:
          description: Short message that describes the error
          type: string
          maxLength: 255
        status:
          description: Http status codes of the error
          type: integer
          format: int32
          minimum: 100
          maximum: 600
        detail:
          description: Specific explanation of the occurred problem.
          type: string
          maxLength: 255
      required:
        - type
        - title
        - status
        - detail
  parameters:
    Authorization:
      name: Authorization
      in: header
      description: Bearer Authorization Token
      schema:
        type: string
      required: true
    offset:
      name: offset
      in: query
      description: >-
        The index of page that is to be retrieved – the parameter is
        zero-indexed and its default value is 0.
      schema:
        type: integer
        format: int32
        default: 0
        minimum: 0
      required: false
      style: form
      explode: false
    limit:
      name: limit
      in: query
      description: >-
        The number of elements per page that are to be retrieved – the default
        value is 20 and maximum value is 50.
      schema:
        type: integer
        format: int32
        default: 20
        minimum: 1
        maximum: 50
      required: false
    partial_stuff_name:
      name: partial_stuff_name
      in: query
      description: >-
        A fragment of the stuff's name of the stuff to search for (matches the
        stuff's name against entered search string of 3 or more characters).
      required: true
      schema:
        maxLength: 255
        minLength: 3
        pattern: ^[^<>/\\%$&\[\];=]+$
        type: string
  securitySchemes:
    bearer:
      type: apiKey
      description: The Bearer authentication scheme
      name: Authorization
      in: header
